{
  "manifestVersion": "3.1",
  "impls": {
    "e8a214b313be697d6a8ff67a44fb90cdec93561bab4b757992959f5e39c22277": {
      "address": "0x2DA13A91E06Ce9619399684fC5429d25DfadC651",
      "txHash": "0xb478bf2838bb421f38640c606baf6082ed11101cfa3fdbcb895b1d8671cd9aa2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "RariFundManager",
            "label": "fundDisabled",
            "type": "t_bool",
            "src": "RariFundManager.sol:42"
          },
          {
            "contract": "RariFundManager",
            "label": "_rariFundControllerContract",
            "type": "t_address_payable",
            "src": "RariFundManager.sol:47"
          },
          {
            "contract": "RariFundManager",
            "label": "rariFundController",
            "type": "t_contract(RariFundController)1949",
            "src": "RariFundManager.sol:52"
          },
          {
            "contract": "RariFundManager",
            "label": "_rariFundTokenContract",
            "type": "t_address",
            "src": "RariFundManager.sol:57"
          },
          {
            "contract": "RariFundManager",
            "label": "rariFundToken",
            "type": "t_contract(RariFundToken)6917",
            "src": "RariFundManager.sol:62"
          },
          {
            "contract": "RariFundManager",
            "label": "rariFundPriceConsumer",
            "type": "t_contract(RariFundPriceConsumer)4871",
            "src": "RariFundManager.sol:67"
          },
          {
            "contract": "RariFundManager",
            "label": "_rariFundProxyContract",
            "type": "t_address",
            "src": "RariFundManager.sol:72"
          },
          {
            "contract": "RariFundManager",
            "label": "_rariFundRebalancerAddress",
            "type": "t_address",
            "src": "RariFundManager.sol:77"
          },
          {
            "contract": "RariFundManager",
            "label": "_supportedCurrencies",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "RariFundManager.sol:82"
          },
          {
            "contract": "RariFundManager",
            "label": "_currencyIndexes",
            "type": "t_mapping(t_string_memory,t_uint8)",
            "src": "RariFundManager.sol:87"
          },
          {
            "contract": "RariFundManager",
            "label": "_currencyDecimals",
            "type": "t_mapping(t_string_memory,t_uint256)",
            "src": "RariFundManager.sol:92"
          },
          {
            "contract": "RariFundManager",
            "label": "_erc20Contracts",
            "type": "t_mapping(t_string_memory,t_address)",
            "src": "RariFundManager.sol:97"
          },
          {
            "contract": "RariFundManager",
            "label": "_poolsByCurrency",
            "type": "t_mapping(t_string_memory,t_array(t_enum(LiquidityPool)114)dyn_storage)",
            "src": "RariFundManager.sol:102"
          },
          {
            "contract": "RariFundManager",
            "label": "_authorizedFundManagerDataSource",
            "type": "t_address",
            "src": "RariFundManager.sol:195"
          },
          {
            "contract": "RariFundManager",
            "label": "_cachePoolBalances",
            "type": "t_bool",
            "src": "RariFundManager.sol:363"
          },
          {
            "contract": "RariFundManager",
            "label": "_cacheDydxBalances",
            "type": "t_bool",
            "src": "RariFundManager.sol:368"
          },
          {
            "contract": "RariFundManager",
            "label": "_poolBalanceCache",
            "type": "t_mapping(t_string_memory,t_mapping(t_uint8,t_uint256))",
            "src": "RariFundManager.sol:373"
          },
          {
            "contract": "RariFundManager",
            "label": "_dydxTokenAddressesCache",
            "type": "t_array(t_address)dyn_storage",
            "src": "RariFundManager.sol:378"
          },
          {
            "contract": "RariFundManager",
            "label": "_dydxBalancesCache",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "RariFundManager.sol:383"
          },
          {
            "contract": "RariFundManager",
            "label": "_rawFundBalanceCache",
            "type": "t_int256",
            "src": "RariFundManager.sol:464"
          },
          {
            "contract": "RariFundManager",
            "label": "_accountBalanceLimitDefault",
            "type": "t_uint256",
            "src": "RariFundManager.sol:530"
          },
          {
            "contract": "RariFundManager",
            "label": "_accountBalanceLimits",
            "type": "t_mapping(t_address,t_int256)",
            "src": "RariFundManager.sol:535"
          },
          {
            "contract": "RariFundManager",
            "label": "_acceptedCurrencies",
            "type": "t_mapping(t_string_memory,t_bool)",
            "src": "RariFundManager.sol:540"
          },
          {
            "contract": "RariFundManager",
            "label": "_acceptedCurrenciesArray",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "RariFundManager.sol:553"
          },
          {
            "contract": "RariFundManager",
            "label": "_netDeposits",
            "type": "t_int256",
            "src": "RariFundManager.sol:797"
          },
          {
            "contract": "RariFundManager",
            "label": "_interestFeeRate",
            "type": "t_uint256",
            "src": "RariFundManager.sol:818"
          },
          {
            "contract": "RariFundManager",
            "label": "_rawInterestAccruedAtLastFeeRateChange",
            "type": "t_int256",
            "src": "RariFundManager.sol:843"
          },
          {
            "contract": "RariFundManager",
            "label": "_interestFeesGeneratedAtLastFeeRateChange",
            "type": "t_int256",
            "src": "RariFundManager.sol:848"
          },
          {
            "contract": "RariFundManager",
            "label": "_interestFeesClaimed",
            "type": "t_uint256",
            "src": "RariFundManager.sol:864"
          },
          {
            "contract": "RariFundManager",
            "label": "_interestFeeMasterBeneficiary",
            "type": "t_address",
            "src": "RariFundManager.sol:878"
          },
          {
            "contract": "RariFundManager",
            "label": "_withdrawalFeeRate",
            "type": "t_uint256",
            "src": "RariFundManager.sol:954"
          },
          {
            "contract": "RariFundManager",
            "label": "_withdrawalFeeMasterBeneficiary",
            "type": "t_address",
            "src": "RariFundManager.sol:959"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_contract(RariFundController)1949": {
            "label": "contract RariFundController"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(RariFundToken)6917": {
            "label": "contract RariFundToken"
          },
          "t_contract(RariFundPriceConsumer)4871": {
            "label": "contract RariFundPriceConsumer"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_mapping(t_string_memory,t_uint8)": {
            "label": "mapping(string => uint8)"
          },
          "t_mapping(t_string_memory,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_mapping(t_string_memory,t_array(t_enum(LiquidityPool)114)dyn_storage)": {
            "label": "mapping(string => enum RariFundController.LiquidityPool[])"
          },
          "t_mapping(t_string_memory,t_mapping(t_uint8,t_uint256))": {
            "label": "mapping(string => mapping(uint8 => uint256))"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_int256)": {
            "label": "mapping(address => int256)"
          },
          "t_mapping(t_string_memory,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f1b75a1127cb46e4ea15caa2f064bb7acea4642e0cfedfe98d440a2263e5443d": {
      "address": "0x704Bff255201c9Da5487Fa251bbC686a69d8ec77",
      "txHash": "0xc777ba8952564919440e79e8d722f3681b4c3459dd289f8336070d176fdd1cb8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "ERC20",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:36"
          },
          {
            "contract": "ERC20",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:38"
          },
          {
            "contract": "ERC20",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:40"
          },
          {
            "contract": "ERC20",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:233"
          },
          {
            "contract": "ERC20Detailed",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol:10"
          },
          {
            "contract": "ERC20Detailed",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol:11"
          },
          {
            "contract": "ERC20Detailed",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol:12"
          },
          {
            "contract": "ERC20Detailed",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol:56"
          },
          {
            "contract": "MinterRole",
            "label": "_minters",
            "type": "t_struct(Role)12335_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol:14"
          },
          {
            "contract": "MinterRole",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol:49"
          },
          {
            "contract": "ERC20Mintable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol:30"
          },
          {
            "contract": "ERC20Burnable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol:30"
          },
          {
            "contract": "RariFundToken",
            "label": "rariGovernanceTokenDistributor",
            "type": "t_contract(IRariGovernanceTokenDistributor)7270",
            "src": "RariFundToken.sol:40"
          }
        ],
        "types": {
          "t_contract(IRariGovernanceTokenDistributor)7270": {
            "label": "contract IRariGovernanceTokenDistributor"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_struct(Role)12335_storage": {
            "label": "struct Roles.Role"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "901b3a805ee6964e019091bc8442975bbd0cdc61728cbf1a264e0d4b320ced5a": {
      "address": "0xa27BE12024b06a7d1ba5cf0d9182d65a7B021f5d",
      "txHash": "0x8a8b03a210a94d7d599ee5a4d9ca306ced7678b8994fd5be22d1a0e50dcdd227",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "RariFundPriceConsumer",
            "label": "_daiUsdPriceFeed",
            "type": "t_contract(AggregatorV3Interface)11636",
            "src": "RariFundPriceConsumer.sol:42"
          },
          {
            "contract": "RariFundPriceConsumer",
            "label": "_ethUsdPriceFeed",
            "type": "t_contract(AggregatorV3Interface)11636",
            "src": "RariFundPriceConsumer.sol:47"
          },
          {
            "contract": "RariFundPriceConsumer",
            "label": "_ethBasedPriceFeeds",
            "type": "t_mapping(t_string_memory,t_contract(AggregatorV3Interface)11636)",
            "src": "RariFundPriceConsumer.sol:52"
          },
          {
            "contract": "RariFundPriceConsumer",
            "label": "allCurrenciesPeggedTo1Usd",
            "type": "t_bool",
            "src": "RariFundPriceConsumer.sol:147"
          }
        ],
        "types": {
          "t_contract(AggregatorV3Interface)11636": {
            "label": "contract AggregatorV3Interface"
          },
          "t_mapping(t_string_memory,t_contract(AggregatorV3Interface)11636)": {
            "label": "mapping(string => contract AggregatorV3Interface)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0x482136f386f8eC0032e730ee28Ee9277B965E3B1",
    "txHash": "0x81aef1504be10617dc2c4040722a307f5e7f571eab64314b5f0a59d0cbf02158"
  }
}
